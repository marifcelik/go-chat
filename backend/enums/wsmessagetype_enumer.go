// Code generated by "enumer -type=WSMessageType -trimprefix=WSMessage"; DO NOT EDIT.

package enums

import (
	"fmt"
	"strings"
)

const _WSMessageTypeName = "ConversationResult"

var _WSMessageTypeIndex = [...]uint8{0, 12, 18}

const _WSMessageTypeLowerName = "conversationresult"

func (i WSMessageType) String() string {
	if i < 0 || i >= WSMessageType(len(_WSMessageTypeIndex)-1) {
		return fmt.Sprintf("WSMessageType(%d)", i)
	}
	return _WSMessageTypeName[_WSMessageTypeIndex[i]:_WSMessageTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _WSMessageTypeNoOp() {
	var x [1]struct{}
	_ = x[WSMessageConversation-(0)]
	_ = x[WSMessageResult-(1)]
}

var _WSMessageTypeValues = []WSMessageType{WSMessageConversation, WSMessageResult}

var _WSMessageTypeNameToValueMap = map[string]WSMessageType{
	_WSMessageTypeName[0:12]:       WSMessageConversation,
	_WSMessageTypeLowerName[0:12]:  WSMessageConversation,
	_WSMessageTypeName[12:18]:      WSMessageResult,
	_WSMessageTypeLowerName[12:18]: WSMessageResult,
}

var _WSMessageTypeNames = []string{
	_WSMessageTypeName[0:12],
	_WSMessageTypeName[12:18],
}

// WSMessageTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func WSMessageTypeString(s string) (WSMessageType, error) {
	if val, ok := _WSMessageTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _WSMessageTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to WSMessageType values", s)
}

// WSMessageTypeValues returns all values of the enum
func WSMessageTypeValues() []WSMessageType {
	return _WSMessageTypeValues
}

// WSMessageTypeStrings returns a slice of all String values of the enum
func WSMessageTypeStrings() []string {
	strs := make([]string, len(_WSMessageTypeNames))
	copy(strs, _WSMessageTypeNames)
	return strs
}

// IsAWSMessageType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i WSMessageType) IsValid() bool {
	for _, v := range _WSMessageTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
